
server:
  port: 5051
  tomcat:
    max-connections: 2000 # Maximum connections
    accept-count: 200     # Maximum waiting number
  servlet:
    context-path: /
  error:
    include-stacktrace: never
    include-message: always
    include-exception: true
    include-binding-errors: always

spring:
  boot:
    admin:
      client:
        # Cloud Native Spring Admin Server is running
        url: http://localhost:9090
  threads:
    virtual:
      enabled: true
  application:
    name: admin-bff
  cache:
    type: redis
    redis:
      cache-null-values: true
      use-key-prefix: true
      key-prefix: ECOMM-ADMIN-BFF
      time-to-live: 5000
  data:
    redis:
      host: localhost
      port: 6379
      ssl: 
        enabled: false
      timeout: 1000
  cloud:
    discovery:
      enabled: false

management:
  server:
    port: ${server.port}
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
      show-components: always
  info:
    git:
      mode: full
  health:
    ratelimiters:
      enabled: true
    circuitbreakers:
      enabled: true
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces
      timeout: 1s
      compression: GZIP
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true

springdoc:
  show-actuator: false
  show-login-endpoint: false
  api-docs:
    path: /api
  swagger-ui:
    path: /
    operationsSorter: method
    disable-swagger-default-url: true

resilience4j:
  circuitbreaker:
    instances:
      remote-gets:
        sliding-window-type: COUNT_BASED
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        register-health-indicator: true
        ignore-exceptions:
          - io.oigres.ecomm.service.products.api.RemoteMethodArgumentNotValidException
          - io.oigres.ecomm.service.users.api.model.BusinessApiException
          - io.oigres.ecomm.service.products.model.BusinessApiException
          - io.oigres.ecomm.service.orders.model.BusinessApiException
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 100
        retryExceptions:
          - io.oigres.ecomm.service.products.api.RemoteServiceUnavailableException
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
        ignoreExceptions:
          - io.oigres.ecomm.service.products.api.RemoteMethodArgumentNotValidException
          - io.oigres.ecomm.service.users.api.model.BusinessApiException
          - io.oigres.ecomm.service.products.model.BusinessApiException
          - io.oigres.ecomm.service.orders.model.BusinessApiException
        fail-after-max-retries: true
    instances:
      remote-get-by-id-200-expected:
        baseConfig: default
      remote-get-page-200-expected:
        baseConfig: default
        maxAttempts: 2
  timelimiter:
    configs:
      default:
        cancelRunningFuture: true
        timeoutDuration: 1s
    instances:
      remote-get-by-id:
        timeoutDuration: 250ms
        cancelRunningFuture: true
      remote-get-page:
        baseConfig: default


logging:
  pattern:
    console: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%-5p) [${spring.application.name}] [%clr(%15.15t){faint}] [%clr(%32X{traceId}-%16X{spanId}){blue}] %clr(%40.40logger{5.10}:%-4L){cyan} : %m %n'
  level:
    io.oigres.ecomm.bff.admin: INFO

ecomm:
  termsOfService: https://ecomm.oigres.io/terms/
  license: https://ecomm.oigres.io/license/
  bff:
    admin:
      name: EComm
      version: ${project.version}
    users:
      baseUri: http://localhost:6061
    products:
      baseUri: http://localhost:6062
    orders:
      baseUri: http://localhost:6063
