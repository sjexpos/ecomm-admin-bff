<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>Ecomm - Admin backend for frontend</name>
  <description />
  <groupId>io.oigres.ecomm</groupId>
  <artifactId>admin-bff</artifactId>
  <version>0.1.0-SNAPSHOT</version>

  <inceptionYear>2024</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>21</java.version>
    <maven.version>3.8.8</maven.version>
    <maven.resources.includeEmptyDirs>true</maven.resources.includeEmptyDirs>
    <maven.resources.overwrite>true</maven.resources.overwrite>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <native-maven-plugin.version>0.9.28</native-maven-plugin.version>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
    <duplicate-finder-maven-plugin.version>2.0.1</duplicate-finder-maven-plugin.version>
    <modernizer-maven-plugin.version>3.1.0</modernizer-maven-plugin.version>
    <spotbugs-maven-plugin.version>4.8.6.2</spotbugs-maven-plugin.version>
    <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-surefire-plugin.version>3.3.1</maven-surefire-plugin.version>
    <maven-surefire-report-plugin.version>3.3.1</maven-surefire-report-plugin.version>
    <maven-failsafe-plugin.version>3.3.1</maven-failsafe-plugin.version>
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
    <maven-deploy-plugin.version>3.1.2</maven-deploy-plugin.version>
    <git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>
    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <spring-boot-maven-plugin.version>3.3.2</spring-boot-maven-plugin.version>
    <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
    <maven-project-info-reports-plugin.version>3.6.2</maven-project-info-reports-plugin.version>
    <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
    <pitest-maven.version>1.16.2</pitest-maven.version>
    <pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
    <pitest.skip>false</pitest.skip>

    <spring-boot.version>3.3.2</spring-boot.version>
    <spring-cloud.version>2023.0.3</spring-cloud.version>
    <opentelemetry-bom.version>1.40.0</opentelemetry-bom.version>
    <opentelemetry-instrumentation-bom.version>2.6.0</opentelemetry-instrumentation-bom.version>
    <opentelemetry.exporter.prometheus.version>1.40.0-alpha</opentelemetry.exporter.prometheus.version>
    <opentelemetry.logback.version>2.6.0-alpha</opentelemetry.logback.version>
    <springdoc.version>2.6.0</springdoc.version>
    <swagger-annotations.version>2.2.22</swagger-annotations.version>
    <lombok.version>1.18.34</lombok.version> <!-- warning, depends on spring boot version and it is used in maven-compiler-plugin. If the version is not put, intellij does not compile -->
    <mapstruct.version>1.6.2</mapstruct.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <slf4j.api.version>2.0.9</slf4j.api.version>
    <junit-pioneer.version>2.2.0</junit-pioneer.version>

    <ecomm.users-service.version>0.1.0-SNAPSHOT</ecomm.users-service.version>
    <ecomm.products-service.version>0.1.0-SNAPSHOT</ecomm.products-service.version>
    <ecomm.orders-service.version>0.1.0-SNAPSHOT</ecomm.orders-service.version>

    <start-class>io.oigres.ecomm.bff.admin.Bootstrap</start-class>
  </properties>

  <developers>
    <developer>
      <name>Sergio Exposito</name>
      <email>sjexpos@gmail.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/sjexpos/ecomm-admin-bff.git</connection>
    <developerConnection>scm:git:https://github.com/sjexpos/ecomm-admin-bff.git</developerConnection>
    <url>scm:git:https://github.com/sjexpos/ecomm-admin-bff.git</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/sjexpos/ecomm-admin-bff/issues</url>
  </issueManagement>

  <ciManagement>
    <system>GitHub</system>
    <url>https://github.com/sjexpos/ecomm-admin-bff/actions</url>
  </ciManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-bom</artifactId>
        <version>${opentelemetry-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.opentelemetry.instrumentation</groupId>
        <artifactId>opentelemetry-instrumentation-bom</artifactId>
        <version>${opentelemetry-instrumentation-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Open API 3.0 (swagger) dependencies -->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-common</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-mapstruct-binding</artifactId>
        <version>${lombok-mapstruct-binding.version}</version>
      </dependency>

      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-sdk</artifactId>
        <version>${ecomm.users-service.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-api</artifactId>
        <version>${ecomm.users-service.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>products-service-sdk</artifactId>
        <version>${ecomm.products-service.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>products-service-api</artifactId>
        <version>${ecomm.products-service.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>orders-service-sdk</artifactId>
        <version>${ecomm.orders-service.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>orders-service-api</artifactId>
        <version>${ecomm.orders-service.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit-pioneer</groupId>
        <artifactId>junit-pioneer</artifactId>
        <version>${junit-pioneer.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
  
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Open API 3 -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
    </dependency>

    <!-- Redis cache -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>

    <!-- Distributed tracing -->
    <dependency>
      <groupId>io.opentelemetry.instrumentation</groupId>
      <artifactId>opentelemetry-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-metrics</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-prometheus</artifactId>
      <version>${opentelemetry.exporter.prometheus.version}</version>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry.instrumentation</groupId>
      <artifactId>opentelemetry-logback-mdc-1.0</artifactId>
      <version>${opentelemetry.logback.version}</version>
    </dependency>

    <!-- Backend services dependencies -->
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>users-service-sdk</artifactId>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>users-service-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>products-service-sdk</artifactId>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>products-service-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>orders-service-sdk</artifactId>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>orders-service-api</artifactId>
    </dependency>

    <!-- Resilience4j (Retry, Circuit Breaker, Rate Limiter, Bulkhead, and Time Limiter) -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
    </dependency>
    <dependency> <!-- required to Resilience4j annotations work -->
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>

    <!-- Cloud Native Spring Admin connector -->
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-client</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit-pioneer</groupId>
      <artifactId>junit-pioneer</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- WireMock -->
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- They are needed because CI is getting jar artifacts from Github artifacts and it is not getting pom files. So it does not have transitive dependencies. -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>io.projectreactor.netty</groupId>
      <artifactId>reactor-netty-http</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <!-- End -->

    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>build-helper-maven-plugin</artifactId>
      <version>${build-helper-maven-plugin.version}</version>
      <type>maven-plugin</type>
    </dependency>
  </dependencies>
  
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes><include>**/*</include></includes>
        <excludes>
          <exclude>**/.git</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.yaml</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <includes><include>**/*</include></includes>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git-commit-id-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${maven.version}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${maven.compiler.source}</version>
                </requireJavaVersion>                            
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-maven-plugin.version}</version>
        <configuration>
          <java>
            <includes>
              <include>src/main/java/**/*.java</include>
              <include>src/test/java/**/*.java</include>
            </includes>
            <googleJavaFormat>
              <reflowLongStrings>true</reflowLongStrings>
              <formatJavadoc>false</formatJavadoc>
            </googleJavaFormat>
            <licenseHeader>
              <file>${project.basedir}/license-header.txt</file>
            </licenseHeader>
            <importOrder/>
            <removeUnusedImports />
            <formatAnnotations />
            <endWithNewline />
          </java>
        </configuration>
        <executions>
          <execution>
            <id>apply-checkstyle</id>
            <phase>validate</phase>
            <goals>
              <goal>apply</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <version>${duplicate-finder-maven-plugin.version}</version>
        <configuration>
          <checkCompileClasspath>true</checkCompileClasspath>
          <checkRuntimeClasspath>true</checkRuntimeClasspath>
          <checkTestClasspath>true</checkTestClasspath>
          <failBuildInCaseOfEqualContentConflict>true</failBuildInCaseOfEqualContentConflict>
          <failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
          <ignoredDependencies>
            <dependency>
              <groupId>org.springframework.cloud</groupId>
              <artifactId>spring-cloud-contract-shade</artifactId>
            </dependency>
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-aop</artifactId>
            </dependency>
            <dependency>
              <groupId>org.springframework.cloud</groupId>
              <artifactId>spring-cloud-contract-wiremock</artifactId>
            </dependency>
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-jcl</artifactId>
            </dependency>
          </ignoredDependencies>
          <ignoredResourcePatterns>COPYRIGHT.txt,mozilla/public-suffix-list.txt,hamcrest-core-is-deprecated.txt,about.html,plugin.properties,helpers.nashorn.js,git.properties</ignoredResourcePatterns>
        </configuration>
        <executions>
          <execution>
            <id>run-duplicate-finder</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.gaul</groupId>
        <artifactId>modernizer-maven-plugin</artifactId>
        <version>${modernizer-maven-plugin.version}</version>
        <configuration>
          <javaVersion>${maven.compiler.source}</javaVersion>
        </configuration>
        <executions>
          <execution>
            <id>run-modernizer</id>
            <phase>verify</phase>
            <goals>
              <goal>modernizer</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <configuration>
          <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
          <jvmArgs>-Dfindbugs.assertionmethods=org.apache.commons.lang3.Validate.notNull</jvmArgs>
          <failOnError>true</failOnError>
          <htmlOutput>true</htmlOutput>
        </configuration>
        <executions>
          <execution>
            <id>run-spotbugs</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <parameters>true</parameters> <!-- store method argument names on byte code. Useful for spring SPEL -->
          <annotationProcessorPaths>
            <!-- The order in those processors are important. If not mapstruct would work bad together lombok -->
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>${native-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*Test</include>
            <include>**/*Tests</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-report-plugin.version}</version>
        <configuration>
          <alwaysGenerateSurefireReport>true</alwaysGenerateSurefireReport>
          <alwaysGenerateFailsafeReport>true</alwaysGenerateFailsafeReport>
        </configuration>
        <executions>
          <execution>
            <id>unit-tests</id>
            <phase>test</phase>
            <goals>
              <goal>report-only</goal>
            </goals>
          </execution>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>report-only</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <configuration>
          <output>file</output>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-initialize-integration</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest-maven.version}</version>
        <configuration>
          <jvmArgs>
            <jvmArg>-XX:TieredStopAtLevel=1</jvmArg>
          </jvmArgs>
          <mutators>
            <!-- Defauls -->
            <mutator>CONDITIONALS_BOUNDARY</mutator>
            <mutator>INCREMENTS</mutator>
            <mutator>INVERT_NEGS</mutator>
            <mutator>MATH</mutator>
            <mutator>NEGATE_CONDITIONALS</mutator>
            <mutator>VOID_METHOD_CALLS</mutator>
            <mutator>EMPTY_RETURNS</mutator>
            <mutator>FALSE_RETURNS</mutator>
            <mutator>TRUE_RETURNS</mutator>
            <mutator>NULL_RETURNS</mutator>
            <mutator>PRIMITIVE_RETURNS</mutator>
            <!-- Optionals -->
            <!--
            <mutator>CONSTRUCTOR_CALLS</mutator>
            <mutator>INLINE_CONSTS</mutator>
            <mutator>NON_VOID_METHOD_CALLS</mutator>
            <mutator>REMOVE_CONDITIONALS_EQUAL_IF</mutator>
            <mutator>REMOVE_CONDITIONALS_EQUAL_ELSE</mutator>
            <mutator>REMOVE_CONDITIONALS_ORDER_IF</mutator>
            <mutator>REMOVE_CONDITIONALS_ORDER_ELSE</mutator>
            <mutator>REMOVE_INCREMENTS</mutator>
            -->
            <!-- Experimental -->
            <!--
            <mutator>EXPERIMENTAL_ARGUMENT_PROPAGATION</mutator>
            <mutator>EXPERIMENTAL_BIG_DECIMAL</mutator>
            <mutator>EXPERIMENTAL_BIG_INTEGER</mutator>
            <mutator>EXPERIMENTAL_NAKED_RECEIVER</mutator>
            <mutator>EXPERIMENTAL_MEMBER_VARIABLE</mutator>
            <mutator>EXPERIMENTAL_SWITCH</mutator>
            -->
          </mutators>
          <mutationThreshold>0</mutationThreshold>
          <exportLineCoverage>true</exportLineCoverage>
          <skip>${pitest.skip}</skip>
          <timestampedReports>false</timestampedReports>
          <outputFormats><value>XML</value><value>HTML</value></outputFormats>
          <verbose>false</verbose> <!-- Set to true for noisy output -->
          <verbosity>NO_SPINNER</verbosity> <!-- For CI -->
          <withHistory>true</withHistory>
        </configuration>
        <executions>
          <execution>
            <id>pitest-mutation-coverage</id>
            <phase>verify</phase>
            <goals>
              <goal>mutationCoverage</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>${pitest-junit5-plugin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <verbose>false</verbose>
          <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
          <offline>true</offline>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>${start-class}</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>parse-version</id>
            <phase>validate</phase>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <updateWorkingCopyVersions>true</updateWorkingCopyVersions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${maven-site-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-reports</id>
            <phase>site</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy  todir="${basedir}/target/site">
                  <fileset dir="target" includes="spotbugs.html" erroronmissingdir="false"/>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
              <report>report-integration</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>

